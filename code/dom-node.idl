interface Node {
  // NodeType
  const unsigned short ELEMENT_NODE = 1;
  const unsigned short ATTRIBUTE_NODE = 2;
  const unsigned short TEXT_NODE = 3;
  const unsigned short CDATA_SECTION_NODE = 4;
  const unsigned short ENTITY_REFERENCE_NODE = 5;
  const unsigned short ENTITY_NODE = 6;
  const unsigned short PROCESSING_INSTRUCTION_NODE = 7;
  const unsigned short COMMENT_NODE = 8;
  const unsigned short DOCUMENT_NODE = 9;
  const unsigned short DOCUMENT_TYPE_NODE = 10;
  const unsigned short DOCUMENT_FRAGMENT_NODE = 11;
  const unsigned short NOTATION_NODE = 12;

  readonly attribute DOMString nodeName;
           attribute DOMString nodeValue;

  readonly attribute unsigned short nodeType;
  readonly attribute Node parentNode;
  readonly attribute NodeList childNodes;
  readonly attribute Node firstChild;
  readonly attribute Node lastChild;
  readonly attribute Node previousSibling;
  readonly attribute Node nextSibling;
  readonly attribute NamedNodeMap attributes;
  readonly attribute Document ownerDocument;

  Node insertBefore(in Node newChild, in Node refChild)
  Node replaceChild(in Node newChild, in Node oldChild)
  Node removeChild(in Node oldChild)
  Node appendChild(in Node newChild)
  boolean hasChildNodes();
  Node cloneNode(in boolean deep);
  void normalize();
  boolean isSupported(in DOMString feature, in DOMString version);
  readonly attribute DOMString namespaceURI;
  attribute DOMString prefix;

  readonly attribute DOMString localName;
  boolean hasAttributes();
  readonly attribute DOMString baseURI;

  // DocumentPosition
  const unsigned short DOCUMENT_POSITION_DISCONNECTED = 0x01;
  const unsigned short DOCUMENT_POSITION_PRECEDING = 0x02;
  const unsigned short DOCUMENT_POSITION_FOLLOWING = 0x04;
  const unsigned short DOCUMENT_POSITION_CONTAINS = 0x08;
  const unsigned short DOCUMENT_POSITION_CONTAINED_BY = 0x10;
  const unsigned short DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 0x20;

  unsigned short compareDocumentPosition(in Node other)
  attribute DOMString textContent;

  boolean isSameNode(in Node other);
  DOMString lookupPrefix(in DOMString namespaceURI);
  boolean isDefaultNamespace(in DOMString namespaceURI);
  DOMString lookupNamespaceURI(in DOMString prefix);
  boolean isEqualNode(in Node arg);
  DOMObject getFeature(in DOMString feature, in DOMString version);
  DOMUserData setUserData(in DOMString key, in DOMUserData data, in UserDataHandler handler);
  DOMUserData getUserData(in DOMString key);
};
